<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-sm-12">
                <span>查詢條件</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-2">
                <span>Name</span>
            </div>
            <div class="col-sm-10">
                <input class="form-control" type="text" @bind="@ProductName" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                <span>Category</span>
            </div>
            <div class="col-sm-10">
                <select class="form-control" @bind="CategoryGuid">
                    <option value="@Guid.Empty">請選擇</option>
                    @foreach (var category in Categories)
                    {
                        <option value="@category.Uuid">@category.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-7">
                <button type="button" class="btn btn-info" @onclick="GetProductAsync">查詢</button>
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public string? ProductName { get; set; }

    [Parameter]
    public EventCallback<ProductQueryDto> OnClickCallBack { get; set; }

    [Parameter]
    public List<CategoryDto> Categories { get; set; } = default!;

    private Guid CategoryGuid { get; set; }

    protected override void OnInitialized()
    {
        Categories = new List<CategoryDto>();
        base.OnInitialized();
    }

    private async Task GetProductAsync()
    {
        await OnClickCallBack.InvokeAsync(new ProductQueryDto(ProductName, CategoryGuid));
    }
}